{"version":3,"sources":["Navbar.js","ComingSoon.js","Biodata.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","class","Link","to","type","React","Component","ComingSoon","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","document","body","style","src_Navbar","dist_react_default","options","wrapperClassName","strings","autoStart","loop","Icon","props","call","src","image","Biodata","_React$Component2","Biodata_Icon","Home","_this","state","background","ChangeColor","bind","assertThisInitialized","setState","onClick","Biodata_Biodata","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33ffa4e0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './navbar.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {Redirect} from 'react-router'\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n    \n     <nav>\n      <div className = \"container\">\n      <div class=\"row\">\n      <div class=\"col-sl-3\">\n      <Link to=\"/\"><button type=\"button\" className=\"btn btn-default\">Home</button></Link>\n      </div>\n      <div class=\"col-sl-3\">\n      <Link to=\"/portofolio\"><button type=\"button\" className=\"btn btn-default\" >Portofolio</button></Link>\n      </div>\n      <div class=\"col-sl-3\">\n      <Link to=\"/about\"><button type=\"button\" className=\"btn btn-default\"  >About me</button></Link>\n      </div>\n      <div class=\"col-sl-3\"> \n      <Link to=\"/experience\"><button type=\"button\" className=\"btn btn-default\" >Experience</button></Link>\n      </div>\n      </div>\n      </div> \n     </nav>\n     \n     \n    );\n  }\n}\n\nexport default Navbar;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./comingsoon.css\"\nimport Typewriter from 'typewriter-effect';\nimport Navbar from './Navbar';\n\nexport class ComingSoon extends React.Component {\nrender() {\n    document.body.style = \"background: #BDC581\"\n    return (\n        <div>\n            < Navbar />\n        <div className=\"row soon\">\n            <Typewriter className=\"type\" \n                options={{\n                wrapperClassName: \"type\",\n                strings: \"Coming Soon\",\n                autoStart: true,\n                loop: true,\n                }}\n            />\n        </div>\n        </div>\n    )\n    \n}\n\n\n\n}\n\nexport default ComingSoon;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {ComingSoon} from './ComingSoon';\nimport { Home } from './Home';\nimport Typewriter from 'typewriter-effect';\n\n\nexport class Icon extends React.Component {\n    constructor(props) {\n        super(props);\n      \n    }\n\n\n    render() {\n        return (\n            <img src={this.props.image} className= {this.props.className}/>\n        )\n    }\n\n}\n\n\n\n\nexport class Biodata extends React.Component{\n\n\n    render() {\n       return ( \n        <div className=\"white-square-container rounded\">\n        <div className=\"bio\">\n          <h1><Typewriter className=\"type\" \n                options={{\n                strings: \"Hello, I am Nasya\",\n                autoStart: true,\n                loop: true\n                }}\n            /></h1>\n\n          <p>i am an undergraduate student from Information System </p>\n          <p>hopefully developing web and explore business development</p>\n          <div className=\"row\">\n          <div className=\"col-md-4 pp\"><Link to=\"/portofolio\"><Icon image=\"https://img.icons8.com/dusk/64/000000/unicorn.png\" className=\"button s\"/></Link></div>\n          <div className=\"col-md-4 pp\"><Link to=\"/about\"><Icon image=\"https://img.icons8.com/dusk/64/000000/ghost.png\" className=\"button g\"  /></Link></div>\n          <div className=\"col-md-4 pp\"><Link to=\"/experience\"><Icon image=\"https://img.icons8.com/dusk/64/000000/theatre-mask.png\" className=\"button d\" /></Link></div>\n          </div>\n          <div className = \"row b\">\n            <div className=\"col-md-4 btn btn-default p\">portofolio</div>\n            <div className=\"col-md-4 btn btn-default p\">about me</div>\n            <div className=\"col-md-4 btn btn-default p\">experience</div>\n          </div>\n        </div>\n        </div>\n    )\n\n    }\n} \n\n\n\n    \n    \n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Biodata} from './Biodata';\n\n\nexport class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            background : \"#c44569;\"\n        }\n        this.ChangeColor = this.ChangeColor.bind(this);\n    }\n\n    ChangeColor() {\n        if (this.state.background == \"#c44569;\") {\n            this.setState({\n                background : \"#F8EFBA\"\n            });\n        }else{\n            this.setState({\n                background : \"#c44569;\"\n            })\n        }\n    }\n    \n    render () {\n        document.body.style = 'background: '+this.state.background\n        return (\n        <div>\n            <button type=\"button\" className=\"btn btn-default\" onClick={this.ChangeColor} >MOOD</button>\n            <div className= \"box\">\n             < Biodata />\n           </div>\n        </div> \n        )\n    }\n\n}\n\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Home} from './Home';\r\nimport {ComingSoon} from './ComingSoon'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nexport class App extends React.Component {\r\n  render() {\r\n   return ( \r\n     <Router>\r\n       <div className=\"app\">\r\n       <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/portofolio\" component={ComingSoon} />\r\n        <Route path=\"/about\" component={ComingSoon} />\r\n        <Route path=\"/experience\" component={ComingSoon} />\r\n      </Switch>\r\n       </div>\r\n    </Router>\r\n     \r\n   )\r\n  };\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Navbar } from './Navbar';\nimport ComingSoon from './ComingSoon';\n\n\n\n  \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}